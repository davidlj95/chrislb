@use 'breakpoints';
@use 'content';
@use 'margins';
@use 'paddings';
@use 'typographies';

:host {
  display: flex;
  flex-direction: column;
  gap: margins.$m;
  width: 100%;
}

.text-and-images {
  display: flex;
  align-content: flex-start;
  gap: margins.$l;
}

$texts-width-big-screen: 55ch;

.texts {
  display: flex;
  flex-direction: column;
  max-width: 50ch;
  flex-shrink: 0;
}

.title {
  @include typographies.size(8);
  @include typographies.bold;

  margin-bottom: margins.$xxs;
}

.subtitle {
  @include typographies.size(4);
  @include typographies.bold;

  margin-bottom: margins.$l;
}

.quote {
  @include typographies.size(1);
  @include typographies.regular;

  margin-bottom: margins.$l;
}

.description {
  @include typographies.light;

  // Keep line breaks
  white-space: pre-wrap;
}

.credits {
  @include typographies.regular;

  display: flex;
  flex-wrap: wrap;
  gap: margins.$s;
  justify-content: flex-start;

  .anchor {
    display: inline flow-root;
  }
}

.images {
  width: 100%;
  // https://github.com/glidejs/glide/issues/233
  min-width: 0;
  $available-height: content.$available-height-without-header;
  max-height: calc($available-height);
}

@include breakpoints.until-s {
  .text-and-images {
    flex-wrap: wrap;
    gap: margins.$m;
  }

  .texts {
    order: 2;
    max-width: unset;
    flex-shrink: 1;
  }

  .images {
    width: 100%;
    min-height: 300px;
    order: 1;

    $extra-space: 128px;
    $available-height: content.$available-height-with-header;
    height: auto;
    max-height: calc($available-height - $extra-space);
  }
}
